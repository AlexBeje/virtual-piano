{"version":3,"sources":["components/piano/piano.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WhiteKey","styled","button","BlackKey","props","transparent","piano","whitePianoKeys","blackPianoKeys","handleClick","whiteKeys","map","key","i","onClick","e","value","blackKeys","className","App","useState","white","black","pianoKeys","console","log","currentTarget","audio","Audio","play","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"66BAWA,IAAMA,EAAWC,IAAOC,OAAV,KAaRC,EAAWF,IAAOC,OAAV,KAEH,SAACE,GAAD,OAAaA,EAAMC,YAAuB,IAAT,UAC3B,SAACD,GAAD,OAAaA,EAAMC,YAAoB,OAAN,OAuCnCC,MAzBf,YAI8B,IAH5BC,EAG2B,EAH3BA,eACAC,EAE2B,EAF3BA,eACAC,EAC2B,EAD3BA,YAEMC,EAAYH,EAAeI,KAAI,SAACC,EAAKC,GACzC,OACE,cAACb,EAAD,CAAUc,QAAS,SAACC,GAAD,OAAON,EAAYM,IAAkBC,MAAOJ,GAAhBA,EAAMC,MAGnDI,EAAYT,EAAeG,KAAI,SAACC,EAAKC,GACzC,OAAOD,EACL,cAACT,EAAD,CAAUW,QAAS,SAACC,GAAD,OAAON,EAAYM,IAAkBC,MAAOJ,GAAhBA,EAAMC,GAErD,cAACV,EAAD,CAAUE,aAAW,GAAMO,EAAMC,MAGrC,OACE,gCACE,qBAAKK,UAAU,OAAf,SAAuBR,IACvB,qBAAKQ,UAAU,OAAf,SAAuBD,QCZdE,MApCf,WAAgB,IAAD,EACOC,mBAAS,CAC3BC,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACtCC,MAAO,CAAC,UAAW,UAAW,GAAI,UAAW,UAAW,aAFnDC,EADM,oBAYb,OACE,qBAAKL,UAAU,oBAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,oBAAIA,UAAU,mBAAd,2BACA,cAAC,EAAD,CACEX,eAAgBgB,EAAUF,MAC1Bb,eAAgBe,EAAUD,MAC1Bb,YAbY,SAACM,GACnBS,QAAQC,IAAI,eAAMV,EAAEW,cAAcV,OAClC,IAAMW,EAAQ,IAAIC,MAAJ,uBAA0Bb,EAAEW,cAAcV,MAA1C,SACdD,EAAEW,cAAcV,OAASW,EAAME,UAY3B,sBAAKX,UAAU,4BAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAcA,UAAU,SACxB,cAAC,IAAD,OAEF,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,IADF,iCCzBKY,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.490689d8.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\nimport styled from \"styled-components\";\n\ntype pianoProps = {\n  whitePianoKeys: string[];\n  blackPianoKeys: string[];\n  handleClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\n// Styled components\nconst WhiteKey = styled.button`\n  background-color: #f4f4f4;\n  width: 100px;\n  height: 300px;\n  border: 1px solid black;\n  transition: 0.3s;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  &:hover {\n    background-color: #e0e0e0;\n  }\n`;\n\n// Styled components\nconst BlackKey = styled.button<{ transparent?: boolean }>`\n  background-color: #0a0a0a;\n  width: ${(props) => (!props.transparent ? \"50px\" : \"0\")};\n  margin-left: ${(props) => (!props.transparent ? \"0\" : \"50px\")};\n  height: 200px;\n  margin-top: -300px;\n  margin-right: 50px;\n  transition: 0.3s;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  &:first-child {\n    margin-left: 75px;\n  }\n  &:hover {\n    background-color: #252525;\n  }\n`;\n\nfunction piano({\n  whitePianoKeys,\n  blackPianoKeys,\n  handleClick,\n}: pianoProps): ReactElement {\n  const whiteKeys = whitePianoKeys.map((key, i) => {\n    return (\n      <WhiteKey onClick={(e) => handleClick(e)} key={key + i} value={key} />\n    );\n  });\n  const blackKeys = blackPianoKeys.map((key, i) => {\n    return key ? (\n      <BlackKey onClick={(e) => handleClick(e)} key={key + i} value={key} />\n    ) : (\n      <BlackKey transparent key={key + i} />\n    );\n  });\n  return (\n    <div>\n      <div className=\"flex\">{whiteKeys}</div>\n      <div className=\"flex\">{blackKeys}</div>\n    </div>\n  );\n}\n\nexport default piano;\n","import React, { useState } from \"react\";\n\n// Style\nimport \"./App.scss\";\nimport \"./tailwind.output.scss\";\n\n// Icons\nimport { AiFillGithub, AiOutlineCopyrightCircle } from \"react-icons/ai\";\nimport { FiFigma } from \"react-icons/fi\";\n\n// Components\nimport Piano from \"./components/piano/piano.component\";\n\nfunction App() {\n  const [pianoKeys] = useState({\n    white: [\"C\", \"D\", \"E\", \"F\", \"G\", \"A\", \"B\"],\n    black: [\"C-Sharp\", \"D-Sharp\", \"\", \"F-Sharp\", \"G-Sharp\", \"A-Sharp\"],\n  });\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    console.log(\"ðŸ‘±\", e.currentTarget.value);\n    const audio = new Audio(`sounds/piano_${e.currentTarget.value}.mp3`);\n    e.currentTarget.value && audio.play();\n  };\n\n  return (\n    <div className=\"app flex h-screen\">\n      <div className=\"m-auto text-center\">\n        <h1 className=\"app__title mb-10\">VIRTUAL PIANO</h1>\n        <Piano\n          whitePianoKeys={pianoKeys.white}\n          blackPianoKeys={pianoKeys.black}\n          handleClick={handleClick}\n        />\n        <div className=\"flex justify-between mt-5\">\n          <div className=\"flex items-center\">\n            <AiFillGithub className=\"mr-5\" />\n            <FiFigma />\n          </div>\n          <div className=\"flex items-center\">\n            <AiOutlineCopyrightCircle />\n            Alexandru Bejenaru\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}